{ @author: Sylvain Maltais (support@gladir.com)
  @created: 2022
  @website(https://www.gladir.com/msdos-0)
  @abstract(Target: Turbo Pascal)
}

Program GRAFTABL;

{$M 1024,0,0}

Uses DOS;

Const Matrix8x8:Array[0..1023] of Byte=(

 $78, $CC, $C0, $CC, $78, $18, $0C, $78,
 $00, $CC, $00, $CC, $CC, $CC, $7E, $00,
 $1C, $00, $78, $CC, $FC, $C0, $78, $00,
 $7E, $C3, $3C, $06, $3E, $66, $3F, $00,
 $CC, $00, $78, $0C, $7C, $CC, $7E, $00,
 $E0, $00, $78, $0C, $7C, $CC, $7E, $00,
 $30, $30, $78, $0C, $7C, $CC, $7E, $00,
 $00, $00, $78, $C0, $C0, $78, $0C, $38,
 $7E, $C3, $3C, $66, $7E, $60, $3C, $00,
 $CC, $00, $78, $CC, $FC, $C0, $78, $00,
 $E0, $00, $78, $CC, $FC, $C0, $78, $00,
 $CC, $00, $70, $30, $30, $30, $78, $00,
 $7C, $C6, $38, $18, $18, $18, $3C, $00,
 $E0, $00, $70, $30, $30, $30, $78, $00,
 $C6, $38, $6C, $C6, $FE, $C6, $C6, $00,
 $30, $30, $00, $78, $CC, $FC, $CC, $00,
 $1C, $00, $FC, $60, $78, $60, $FC, $00,
 $00, $00, $7F, $0C, $7F, $CC, $7F, $00,
 $3E, $6C, $CC, $FE, $CC, $CC, $CE, $00,
 $78, $CC, $00, $78, $CC, $CC, $78, $00,
 $00, $CC, $00, $78, $CC, $CC, $78, $00,
 $00, $E0, $00, $78, $CC, $CC, $78, $00,
 $78, $CC, $00, $CC, $CC, $CC, $7E, $00,
 $00, $E0, $00, $CC, $CC, $CC, $7E, $00,
 $00, $CC, $00, $CC, $CC, $7C, $0C, $F8,
 $C3, $18, $3C, $66, $66, $3C, $18, $00,
 $CC, $00, $CC, $CC, $CC, $CC, $78, $00,
 $18, $18, $7E, $C0, $C0, $7E, $18, $18,
 $38, $6C, $64, $F0, $60, $E6, $FC, $00,
 $CC, $CC, $78, $FC, $30, $FC, $30, $30,
 $F8, $CC, $CC, $FA, $C6, $CF, $C6, $C7,
 $0E, $1B, $18, $3C, $18, $18, $D8, $70,
 $1C, $00, $78, $0C, $7C, $CC, $7E, $00,
 $38, $00, $70, $30, $30, $30, $78, $00,
 $00, $1C, $00, $78, $CC, $CC, $78, $00,
 $00, $1C, $00, $CC, $CC, $CC, $7E, $00,
 $00, $F8, $00, $F8, $CC, $CC, $CC, $00,
 $FC, $00, $CC, $EC, $FC, $DC, $CC, $00,
 $3C, $6C, $6C, $3E, $00, $7E, $00, $00,
 $38, $6C, $6C, $38, $00, $7C, $00, $00,
 $30, $00, $30, $60, $C0, $CC, $78, $00,
 $00, $00, $00, $FC, $C0, $C0, $00, $00,
 $00, $00, $00, $FC, $0C, $0C, $00, $00,
 $C3, $C6, $CC, $DE, $33, $66, $CC, $0F,
 $C3, $C6, $CC, $DB, $37, $6F, $CF, $03,
 $18, $18, $00, $18, $18, $18, $18, $00,
 $00, $33, $66, $CC, $66, $33, $00, $00,
 $00, $CC, $66, $33, $66, $CC, $00, $00,
 $22, $88, $22, $88, $22, $88, $22, $88,
 $55, $AA, $55, $AA, $55, $AA, $55, $AA,
 $DB, $77, $DB, $EE, $DB, $77, $DB, $EE,
 $18, $18, $18, $18, $18, $18, $18, $18,
 $18, $18, $18, $18, $F8, $18, $18, $18,
 $18, $18, $F8, $18, $F8, $18, $18, $18,
 $36, $36, $36, $36, $F6, $36, $36, $36,
 $00, $00, $00, $00, $FE, $36, $36, $36,
 $00, $00, $F8, $18, $F8, $18, $18, $18,
 $36, $36, $F6, $06, $F6, $36, $36, $36,
 $36, $36, $36, $36, $36, $36, $36, $36,
 $00, $00, $FE, $06, $F6, $36, $36, $36,
 $36, $36, $F6, $06, $FE, $00, $00, $00,
 $36, $36, $36, $36, $FE, $00, $00, $00,
 $18, $18, $F8, $18, $F8, $00, $00, $00,
 $00, $00, $00, $00, $F8, $18, $18, $18,
 $18, $18, $18, $18, $1F, $00, $00, $00,
 $18, $18, $18, $18, $FF, $00, $00, $00,
 $00, $00, $00, $00, $FF, $18, $18, $18,
 $18, $18, $18, $18, $1F, $18, $18, $18,
 $00, $00, $00, $00, $FF, $00, $00, $00,
 $18, $18, $18, $18, $FF, $18, $18, $18,
 $18, $18, $1F, $18, $1F, $18, $18, $18,
 $36, $36, $36, $36, $37, $36, $36, $36,
 $36, $36, $37, $30, $3F, $00, $00, $00,
 $00, $00, $3F, $30, $37, $36, $36, $36,
 $36, $36, $F7, $00, $FF, $00, $00, $00,
 $00, $00, $FF, $00, $F7, $36, $36, $36,
 $36, $36, $37, $30, $37, $36, $36, $36,
 $00, $00, $FF, $00, $FF, $00, $00, $00,
 $36, $36, $F7, $00, $F7, $36, $36, $36,
 $18, $18, $FF, $00, $FF, $00, $00, $00,
 $36, $36, $36, $36, $FF, $00, $00, $00,
 $00, $00, $FF, $00, $FF, $18, $18, $18,
 $00, $00, $00, $00, $FF, $36, $36, $36,
 $36, $36, $36, $36, $3F, $00, $00, $00,
 $18, $18, $1F, $18, $1F, $00, $00, $00,
 $00, $00, $1F, $18, $1F, $18, $18, $18,
 $00, $00, $00, $00, $3F, $36, $36, $36,
 $36, $36, $36, $36, $FF, $36, $36, $36,
 $18, $18, $FF, $18, $FF, $18, $18, $18,
 $18, $18, $18, $18, $F8, $00, $00, $00,
 $00, $00, $00, $00, $1F, $18, $18, $18,
 $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF,
 $00, $00, $00, $00, $FF, $FF, $FF, $FF,
 $F0, $F0, $F0, $F0, $F0, $F0, $F0, $F0,
 $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F,
 $FF, $FF, $FF, $FF, $00, $00, $00, $00,
 $00, $00, $76, $DC, $C8, $DC, $76, $00,
 $00, $78, $CC, $F8, $CC, $F8, $C0, $C0,
 $00, $FC, $CC, $C0, $C0, $C0, $C0, $00,
 $00, $FE, $6C, $6C, $6C, $6C, $6C, $00,
 $FC, $CC, $60, $30, $60, $CC, $FC, $00,
 $00, $00, $7E, $D8, $D8, $D8, $70, $00,
 $00, $66, $66, $66, $66, $7C, $60, $C0,
 $00, $76, $DC, $18, $18, $18, $18, $00,
 $FC, $30, $78, $CC, $CC, $78, $30, $FC,
 $38, $6C, $C6, $FE, $C6, $6C, $38, $00,
 $38, $6C, $C6, $C6, $6C, $6C, $EE, $00,
 $1C, $30, $18, $7C, $CC, $CC, $78, $00,
 $00, $00, $7E, $DB, $DB, $7E, $00, $00,
 $06, $0C, $7E, $DB, $DB, $7E, $60, $C0,
 $38, $60, $C0, $F8, $C0, $60, $38, $00,
 $78, $CC, $CC, $CC, $CC, $CC, $CC, $00,
 $00, $FC, $00, $FC, $00, $FC, $00, $00,
 $30, $30, $FC, $30, $30, $00, $FC, $00,
 $60, $30, $18, $30, $60, $00, $FC, $00,
 $18, $30, $60, $30, $18, $00, $FC, $00,
 $0E, $1B, $1B, $18, $18, $18, $18, $18,
 $18, $18, $18, $18, $18, $D8, $D8, $70,
 $30, $30, $00, $FC, $00, $30, $30, $00,
 $00, $76, $DC, $00, $76, $DC, $00, $00,
 $38, $6C, $6C, $38, $00, $00, $00, $00,
 $00, $00, $00, $18, $18, $00, $00, $00,
 $00, $00, $00, $00, $18, $00, $00, $00,
 $0F, $0C, $0C, $0C, $EC, $6C, $3C, $1C,
 $78, $6C, $6C, $6C, $6C, $00, $00, $00,
 $70, $18, $30, $60, $78, $00, $00, $00,
 $00, $00, $3C, $3C, $3C, $3C, $00, $00,
 $00, $00, $00, $00, $00, $00, $00, $00
);

Var
 CurrIntr1Fh:Pointer;
 
Function StrToUpper(s:String):String;
Var
 i:Integer;
Begin
 For i:=1 to Length(s) do If s[i] in ['a'..'z']Then s[i] := UpCase(s[i]);
 StrToUpper:=s;
End; 

BEGIN
 If(ParamStr(1)='/?')or(ParamStr(1)='--help')or(ParamStr(1)='-h')Then Begin
  WriteLn('GRAFTABL : Cette commande permet d''effectuer le chargement en memoire conventionnel ',
                      'd''une table de police de caracteres pour les modes graphiques.');
  WriteLn;
  WriteLn('Syntaxe : GRAFTABL [/STA|/STATUS]');
 End
  Else
 If(StrToUpper(ParamStr(1))='/STA')or(StrToUpper(ParamStr(1))='/STATUS')Then Begin
  GetIntVec($1F,CurrIntr1Fh);
  If CurrIntr1Fh<>NIL Then WriteLn('Police de caractäres deja installer.')
                      Else WriteLn('Aucune police de caractere installer.');
 End
  Else
 Begin
  SetIntVec($1F,@Matrix8x8);
  WriteLn('Table graphique installer.');
  Keep(0);
 End;
END.
